# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build Maven Project
    steps:
    - task: Gradle@3
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'build'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        sonarQubeRunAnalysis: false
        spotBugsAnalysis: false
        
    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: 'build/distributions/uaua-backend-0.1.zip'
        TargetFolder: $(Build.ArtifactStagingDirectory)
    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop
  - deployment: VMDeploy
    displayName: deploy
    environment:
      name: vm
      resourceName: uaua-vm 
      resourceType: VirtualMachine
    strategy:
        rolling:
          maxParallel: 1
          deploy:
            steps:
            - task: Bash@3
              inputs:
                targetType: 'inline'
                script: |
                  echo "Starting deployment script run"
                  pwd
                  ls '$(Pipeline.Workspace)/drop'
                  unzip -d /home/guiguat/ '$(Pipeline.Workspace)/drop/build/distributions/uaua-backend-0.1.zip'
                  screen -dmS backendapp /home/guiguat/uaua-backend-0.1/bin/uaua-backend
          